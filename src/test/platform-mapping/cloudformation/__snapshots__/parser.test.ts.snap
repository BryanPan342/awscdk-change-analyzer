// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CloudFormation complex template 1`] = `
"[
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {},
        \\"name\\": \\"root\\",
        \\"type\\": \\"root\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.0.0/16\\",
            \\"EnableDnsHostnames\\": true,
            \\"EnableDnsSupport\\": true,
            \\"InstanceTenancy\\": \\"default\\",
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC\\"
                }
            ]
        },
        \\"name\\": \\"VPCB9E5F0B4\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::VPC\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.0.0/19\\",
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"AvailabilityZone\\": \\"test-region-1a\\",
            \\"MapPublicIpOnLaunch\\": true,
            \\"Tags\\": [
                {
                    \\"Key\\": \\"aws-cdk:subnet-name\\",
                    \\"Value\\": \\"Public\\"
                },
                {
                    \\"Key\\": \\"aws-cdk:subnet-type\\",
                    \\"Value\\": \\"Public\\"
                },
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet1\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet1SubnetB4246D30\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Subnet\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet1\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet1RouteTableFEE4B781\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::RouteTable\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPublicSubnet1RouteTableFEE4B781\\"
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPublicSubnet1SubnetB4246D30\\"
            }
        },
        \\"name\\": \\"VPCPublicSubnet1RouteTableAssociation0B0896DC\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SubnetRouteTableAssociation\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPublicSubnet1RouteTableFEE4B781\\"
            },
            \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",
            \\"GatewayId\\": {
                \\"Ref\\": \\"VPCIGWB7E252D3\\"
            }
        },
        \\"name\\": \\"VPCPublicSubnet1DefaultRoute91CEF279\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Route\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Domain\\": \\"vpc\\",
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet1\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet1EIP6AD938E8\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::EIP\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"AllocationId\\": {
                \\"Fn::GetAtt\\": [
                    \\"VPCPublicSubnet1EIP6AD938E8\\",
                    \\"AllocationId\\"
                ]
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPublicSubnet1SubnetB4246D30\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet1\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet1NATGatewayE0556630\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::NatGateway\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.32.0/19\\",
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"AvailabilityZone\\": \\"test-region-1b\\",
            \\"MapPublicIpOnLaunch\\": true,
            \\"Tags\\": [
                {
                    \\"Key\\": \\"aws-cdk:subnet-name\\",
                    \\"Value\\": \\"Public\\"
                },
                {
                    \\"Key\\": \\"aws-cdk:subnet-type\\",
                    \\"Value\\": \\"Public\\"
                },
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet2\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet2Subnet74179F39\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Subnet\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet2\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet2RouteTable6F1A15F1\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::RouteTable\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPublicSubnet2RouteTable6F1A15F1\\"
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPublicSubnet2Subnet74179F39\\"
            }
        },
        \\"name\\": \\"VPCPublicSubnet2RouteTableAssociation5A808732\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SubnetRouteTableAssociation\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPublicSubnet2RouteTable6F1A15F1\\"
            },
            \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",
            \\"GatewayId\\": {
                \\"Ref\\": \\"VPCIGWB7E252D3\\"
            }
        },
        \\"name\\": \\"VPCPublicSubnet2DefaultRouteB7481BBA\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Route\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Domain\\": \\"vpc\\",
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet2\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet2EIP4947BC00\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::EIP\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"AllocationId\\": {
                \\"Fn::GetAtt\\": [
                    \\"VPCPublicSubnet2EIP4947BC00\\",
                    \\"AllocationId\\"
                ]
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPublicSubnet2Subnet74179F39\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet2\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet2NATGateway3C070193\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::NatGateway\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.64.0/19\\",
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"AvailabilityZone\\": \\"test-region-1c\\",
            \\"MapPublicIpOnLaunch\\": true,
            \\"Tags\\": [
                {
                    \\"Key\\": \\"aws-cdk:subnet-name\\",
                    \\"Value\\": \\"Public\\"
                },
                {
                    \\"Key\\": \\"aws-cdk:subnet-type\\",
                    \\"Value\\": \\"Public\\"
                },
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet3\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet3Subnet631C5E25\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Subnet\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet3\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet3RouteTable98AE0E14\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::RouteTable\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPublicSubnet3RouteTable98AE0E14\\"
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPublicSubnet3Subnet631C5E25\\"
            }
        },
        \\"name\\": \\"VPCPublicSubnet3RouteTableAssociation427FE0C6\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SubnetRouteTableAssociation\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPublicSubnet3RouteTable98AE0E14\\"
            },
            \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",
            \\"GatewayId\\": {
                \\"Ref\\": \\"VPCIGWB7E252D3\\"
            }
        },
        \\"name\\": \\"VPCPublicSubnet3DefaultRouteA0D29D46\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Route\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Domain\\": \\"vpc\\",
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet3\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet3EIPAD4BC883\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::EIP\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"AllocationId\\": {
                \\"Fn::GetAtt\\": [
                    \\"VPCPublicSubnet3EIPAD4BC883\\",
                    \\"AllocationId\\"
                ]
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPublicSubnet3Subnet631C5E25\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PublicSubnet3\\"
                }
            ]
        },
        \\"name\\": \\"VPCPublicSubnet3NATGatewayD3048F5C\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::NatGateway\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.96.0/19\\",
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"AvailabilityZone\\": \\"test-region-1a\\",
            \\"MapPublicIpOnLaunch\\": false,
            \\"Tags\\": [
                {
                    \\"Key\\": \\"aws-cdk:subnet-name\\",
                    \\"Value\\": \\"Private\\"
                },
                {
                    \\"Key\\": \\"aws-cdk:subnet-type\\",
                    \\"Value\\": \\"Private\\"
                },
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PrivateSubnet1\\"
                }
            ]
        },
        \\"name\\": \\"VPCPrivateSubnet1Subnet8BCA10E0\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Subnet\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PrivateSubnet1\\"
                }
            ]
        },
        \\"name\\": \\"VPCPrivateSubnet1RouteTableBE8A6027\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::RouteTable\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet1RouteTableBE8A6027\\"
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet1Subnet8BCA10E0\\"
            }
        },
        \\"name\\": \\"VPCPrivateSubnet1RouteTableAssociation347902D1\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SubnetRouteTableAssociation\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet1RouteTableBE8A6027\\"
            },
            \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",
            \\"NatGatewayId\\": {
                \\"Ref\\": \\"VPCPublicSubnet1NATGatewayE0556630\\"
            }
        },
        \\"name\\": \\"VPCPrivateSubnet1DefaultRouteAE1D6490\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Route\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.128.0/19\\",
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"AvailabilityZone\\": \\"test-region-1b\\",
            \\"MapPublicIpOnLaunch\\": false,
            \\"Tags\\": [
                {
                    \\"Key\\": \\"aws-cdk:subnet-name\\",
                    \\"Value\\": \\"Private\\"
                },
                {
                    \\"Key\\": \\"aws-cdk:subnet-type\\",
                    \\"Value\\": \\"Private\\"
                },
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PrivateSubnet2\\"
                }
            ]
        },
        \\"name\\": \\"VPCPrivateSubnet2SubnetCFCDAA7A\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Subnet\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PrivateSubnet2\\"
                }
            ]
        },
        \\"name\\": \\"VPCPrivateSubnet2RouteTable0A19E10E\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::RouteTable\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet2RouteTable0A19E10E\\"
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet2SubnetCFCDAA7A\\"
            }
        },
        \\"name\\": \\"VPCPrivateSubnet2RouteTableAssociation0C73D413\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SubnetRouteTableAssociation\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet2RouteTable0A19E10E\\"
            },
            \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",
            \\"NatGatewayId\\": {
                \\"Ref\\": \\"VPCPublicSubnet2NATGateway3C070193\\"
            }
        },
        \\"name\\": \\"VPCPrivateSubnet2DefaultRouteF4F5CFD2\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Route\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.160.0/19\\",
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"AvailabilityZone\\": \\"test-region-1c\\",
            \\"MapPublicIpOnLaunch\\": false,
            \\"Tags\\": [
                {
                    \\"Key\\": \\"aws-cdk:subnet-name\\",
                    \\"Value\\": \\"Private\\"
                },
                {
                    \\"Key\\": \\"aws-cdk:subnet-type\\",
                    \\"Value\\": \\"Private\\"
                },
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PrivateSubnet3\\"
                }
            ]
        },
        \\"name\\": \\"VPCPrivateSubnet3Subnet3EDCD457\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Subnet\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC/PrivateSubnet3\\"
                }
            ]
        },
        \\"name\\": \\"VPCPrivateSubnet3RouteTable192186F8\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::RouteTable\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet3RouteTable192186F8\\"
            },
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet3Subnet3EDCD457\\"
            }
        },
        \\"name\\": \\"VPCPrivateSubnet3RouteTableAssociationC28D144E\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SubnetRouteTableAssociation\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"RouteTableId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet3RouteTable192186F8\\"
            },
            \\"DestinationCidrBlock\\": \\"0.0.0.0/0\\",
            \\"NatGatewayId\\": {
                \\"Ref\\": \\"VPCPublicSubnet3NATGatewayD3048F5C\\"
            }
        },
        \\"name\\": \\"VPCPrivateSubnet3DefaultRoute27F311AE\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Route\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC\\"
                }
            ]
        },
        \\"name\\": \\"VPCIGWB7E252D3\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::InternetGateway\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            },
            \\"InternetGatewayId\\": {
                \\"Ref\\": \\"VPCIGWB7E252D3\\"
            }
        },
        \\"name\\": \\"VPCVPCGW99B986DC\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::VPCGatewayAttachment\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"GroupDescription\\": \\"TestStack/Instance/InstanceSecurityGroup\\",
            \\"SecurityGroupEgress\\": [
                {
                    \\"CidrIp\\": \\"0.0.0.0/0\\",
                    \\"Description\\": \\"Allow all outbound traffic by default\\",
                    \\"IpProtocol\\": \\"-1\\"
                }
            ],
            \\"SecurityGroupIngress\\": [
                {
                    \\"CidrIp\\": \\"0.0.0.0/0\\",
                    \\"Description\\": \\"from 0.0.0.0/0:ICMP Type 8\\",
                    \\"FromPort\\": 8,
                    \\"IpProtocol\\": \\"icmp\\",
                    \\"ToPort\\": -1
                }
            ],
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/Instance\\"
                }
            ],
            \\"VpcId\\": {
                \\"Ref\\": \\"VPCB9E5F0B4\\"
            }
        },
        \\"name\\": \\"InstanceInstanceSecurityGroupF0E2D5BE\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::SecurityGroup\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"AssumeRolePolicyDocument\\": {
                \\"Statement\\": [
                    {
                        \\"Action\\": \\"sts:AssumeRole\\",
                        \\"Effect\\": \\"Allow\\",
                        \\"Principal\\": {
                            \\"Service\\": {
                                \\"Fn::Join\\": [
                                    \\"\\",
                                    [
                                        \\"ec2.\\",
                                        {
                                            \\"Ref\\": \\"AWS::URLSuffix\\"
                                        }
                                    ]
                                ]
                            }
                        }
                    }
                ],
                \\"Version\\": \\"2012-10-17\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/Instance\\"
                }
            ]
        },
        \\"name\\": \\"InstanceInstanceRoleE9785DE5\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::IAM::Role\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"PolicyDocument\\": {
                \\"Statement\\": [
                    {
                        \\"Action\\": \\"ssm:*\\",
                        \\"Effect\\": \\"Allow\\",
                        \\"Resource\\": \\"*\\"
                    }
                ],
                \\"Version\\": \\"2012-10-17\\"
            },
            \\"PolicyName\\": \\"InstanceInstanceRoleDefaultPolicy4ACE9290\\",
            \\"Roles\\": [
                {
                    \\"Ref\\": \\"InstanceInstanceRoleE9785DE5\\"
                }
            ]
        },
        \\"name\\": \\"InstanceInstanceRoleDefaultPolicy4ACE9290\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::IAM::Policy\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Roles\\": [
                {
                    \\"Ref\\": \\"InstanceInstanceRoleE9785DE5\\"
                }
            ]
        },
        \\"name\\": \\"InstanceInstanceProfileAB5AEF02\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::IAM::InstanceProfile\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"AvailabilityZone\\": \\"test-region-1a\\",
            \\"IamInstanceProfile\\": {
                \\"Ref\\": \\"InstanceInstanceProfileAB5AEF02\\"
            },
            \\"ImageId\\": {
                \\"Ref\\": \\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\\"
            },
            \\"InstanceType\\": \\"t3.nano\\",
            \\"SecurityGroupIds\\": [
                {
                    \\"Fn::GetAtt\\": [
                        \\"InstanceInstanceSecurityGroupF0E2D5BE\\",
                        \\"GroupId\\"
                    ]
                }
            ],
            \\"SubnetId\\": {
                \\"Ref\\": \\"VPCPrivateSubnet1Subnet8BCA10E0\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/Instance\\"
                }
            ],
            \\"UserData\\": {
                \\"Fn::Base64\\": \\"#!/bin/bash\\\\nyum install -y\\"
            }
        },
        \\"name\\": \\"InstanceC1063A87\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::Instance\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Type\\": \\"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\\",
            \\"Default\\": \\"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\\"
        },
        \\"name\\": \\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\\",
        \\"type\\": \\"parameter\\",
        \\"subtype\\": \\"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\\"
    }
]"
`;

exports[`CloudFormation nested template 1`] = `
"[
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {},
        \\"name\\": \\"root\\",
        \\"type\\": \\"root\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.0.0/16\\",
            \\"EnableDnsHostnames\\": true,
            \\"EnableDnsSupport\\": true,
            \\"InstanceTenancy\\": \\"default\\",
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": {
                        \\"Fn::GetAtt\\": [
                            \\"NestedStack\\",
                            \\"Outputs.InnerOutput\\"
                        ]
                    }
                }
            ]
        },
        \\"name\\": \\"SomeVPC\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::VPC\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"TemplateURL\\": \\"<S3 URL for the template>\\",
            \\"Parameters\\": {
                \\"InnerStackParameter\\": {
                    \\"Ref\\": \\"OuterStackParameter\\"
                }
            }
        },
        \\"name\\": \\"NestedStack\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::CloudFormation::Stack\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"CidrBlock\\": \\"10.0.0.0/16\\",
            \\"EnableDnsHostnames\\": true,
            \\"EnableDnsSupport\\": true,
            \\"InstanceTenancy\\": \\"default\\",
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Name\\",
                    \\"Value\\": \\"TestStack/VPC\\"
                }
            ]
        },
        \\"name\\": \\"SomeVPC\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::EC2::VPC\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"SomeProperty\\": {
                \\"Fn::GetAtt\\": [
                    \\"InnerStackParameter\\",
                    \\"Type\\"
                ]
            }
        },
        \\"name\\": \\"User00B015A1\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::IAM::User\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Type\\": \\"String\\",
            \\"Default\\": \\"parameter_default_inner_value\\"
        },
        \\"name\\": \\"InnerStackParameter\\",
        \\"type\\": \\"parameter\\",
        \\"subtype\\": \\"String\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Value\\": {
                \\"Fn::Sub\\": [
                    \\"SomeOutputValue \${withAnArgument} and an \${InnerStackParameter}\\",
                    {
                        \\"withAnArgument\\": {
                            \\"Ref\\": \\"User00B015A1\\"
                        }
                    }
                ]
            }
        },
        \\"name\\": \\"InnerOutput\\",
        \\"type\\": \\"output\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"Type\\": \\"String\\",
            \\"Default\\": \\"parameter_default_outer_value\\"
        },
        \\"name\\": \\"OuterStackParameter\\",
        \\"type\\": \\"parameter\\",
        \\"subtype\\": \\"String\\"
    }
]"
`;

exports[`CloudFormation simple template 1`] = `
"[
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {},
        \\"name\\": \\"root\\",
        \\"type\\": \\"root\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"KeySchema\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"KeyType\\": \\"HASH\\"
                }
            ],
            \\"AttributeDefinitions\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"AttributeType\\": \\"S\\"
                }
            ],
            \\"ProvisionedThroughput\\": {
                \\"ReadCapacityUnits\\": 5,
                \\"WriteCapacityUnits\\": 5
            }
        },
        \\"name\\": \\"TableCD117FA1\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::DynamoDB::Table\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"KeySchema\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"KeyType\\": \\"HASH\\"
                },
                {
                    \\"AttributeName\\": \\"sortKey\\",
                    \\"KeyType\\": \\"RANGE\\"
                }
            ],
            \\"AttributeDefinitions\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"AttributeType\\": \\"S\\"
                },
                {
                    \\"AttributeName\\": \\"sortKey\\",
                    \\"AttributeType\\": \\"N\\"
                },
                {
                    \\"AttributeName\\": \\"gsiHashKey\\",
                    \\"AttributeType\\": \\"S\\"
                },
                {
                    \\"AttributeName\\": \\"gsiSortKey\\",
                    \\"AttributeType\\": \\"N\\"
                },
                {
                    \\"AttributeName\\": \\"lsiSortKey\\",
                    \\"AttributeType\\": \\"N\\"
                }
            ],
            \\"GlobalSecondaryIndexes\\": [
                {
                    \\"IndexName\\": \\"GSI-PartitionKeyOnly\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"gsiHashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    },
                    \\"ProvisionedThroughput\\": {
                        \\"ReadCapacityUnits\\": 5,
                        \\"WriteCapacityUnits\\": 5
                    }
                },
                {
                    \\"IndexName\\": \\"GSI-PartitionAndSortKeyWithReadAndWriteCapacity\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"gsiHashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"gsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    },
                    \\"ProvisionedThroughput\\": {
                        \\"ReadCapacityUnits\\": 10,
                        \\"WriteCapacityUnits\\": 10
                    }
                },
                {
                    \\"IndexName\\": \\"GSI-ProjectionTypeKeysOnly\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"gsiHashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"gsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"KEYS_ONLY\\"
                    },
                    \\"ProvisionedThroughput\\": {
                        \\"ReadCapacityUnits\\": 5,
                        \\"WriteCapacityUnits\\": 5
                    }
                },
                {
                    \\"IndexName\\": \\"GSI-ProjectionTypeInclude\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"gsiHashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"gsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"NonKeyAttributes\\": [
                            \\"A\\",
                            \\"B\\",
                            \\"C\\",
                            \\"D\\",
                            \\"E\\",
                            \\"F\\",
                            \\"G\\",
                            \\"H\\",
                            \\"I\\",
                            \\"J\\"
                        ],
                        \\"ProjectionType\\": \\"INCLUDE\\"
                    },
                    \\"ProvisionedThroughput\\": {
                        \\"ReadCapacityUnits\\": 5,
                        \\"WriteCapacityUnits\\": 5
                    }
                },
                {
                    \\"IndexName\\": \\"GSI-InverseTableKeySchema\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"sortKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"hashKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    },
                    \\"ProvisionedThroughput\\": {
                        \\"ReadCapacityUnits\\": 5,
                        \\"WriteCapacityUnits\\": 5
                    }
                }
            ],
            \\"LocalSecondaryIndexes\\": [
                {
                    \\"IndexName\\": \\"LSI-PartitionAndTableSortKey\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"hashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"lsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    }
                },
                {
                    \\"IndexName\\": \\"LSI-PartitionAndSortKey\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"hashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"sortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    }
                },
                {
                    \\"IndexName\\": \\"LSI-ProjectionTypeKeysOnly\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"hashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"lsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"KEYS_ONLY\\"
                    }
                },
                {
                    \\"IndexName\\": \\"LSI-ProjectionTypeInclude\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"hashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"lsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"NonKeyAttributes\\": [
                            \\"K\\",
                            \\"L\\",
                            \\"M\\",
                            \\"N\\",
                            \\"O\\",
                            \\"P\\",
                            \\"Q\\",
                            \\"R\\",
                            \\"S\\",
                            \\"T\\"
                        ],
                        \\"ProjectionType\\": \\"INCLUDE\\"
                    }
                }
            ],
            \\"PointInTimeRecoverySpecification\\": {
                \\"PointInTimeRecoveryEnabled\\": true
            },
            \\"ProvisionedThroughput\\": {
                \\"ReadCapacityUnits\\": 5,
                \\"WriteCapacityUnits\\": 5
            },
            \\"SSESpecification\\": {
                \\"SSEEnabled\\": true
            },
            \\"StreamSpecification\\": {
                \\"StreamViewType\\": \\"KEYS_ONLY\\"
            },
            \\"Tags\\": [
                {
                    \\"Key\\": \\"Environment\\",
                    \\"Value\\": \\"Production\\"
                }
            ],
            \\"TimeToLiveSpecification\\": {
                \\"AttributeName\\": \\"timeToLive\\",
                \\"Enabled\\": true
            }
        },
        \\"name\\": \\"TableWithGlobalAndLocalSecondaryIndexBC540710\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::DynamoDB::Table\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"KeySchema\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"KeyType\\": \\"HASH\\"
                }
            ],
            \\"AttributeDefinitions\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"AttributeType\\": \\"S\\"
                },
                {
                    \\"AttributeName\\": \\"gsiHashKey\\",
                    \\"AttributeType\\": \\"S\\"
                }
            ],
            \\"GlobalSecondaryIndexes\\": [
                {
                    \\"IndexName\\": \\"GSI-PartitionKeyOnly\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"gsiHashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    },
                    \\"ProvisionedThroughput\\": {
                        \\"ReadCapacityUnits\\": 5,
                        \\"WriteCapacityUnits\\": 5
                    }
                }
            ],
            \\"ProvisionedThroughput\\": {
                \\"ReadCapacityUnits\\": 5,
                \\"WriteCapacityUnits\\": 5
            }
        },
        \\"name\\": \\"TableWithGlobalSecondaryIndexCC8E841E\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::DynamoDB::Table\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"KeySchema\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"KeyType\\": \\"HASH\\"
                },
                {
                    \\"AttributeName\\": \\"sortKey\\",
                    \\"KeyType\\": \\"RANGE\\"
                }
            ],
            \\"AttributeDefinitions\\": [
                {
                    \\"AttributeName\\": \\"hashKey\\",
                    \\"AttributeType\\": \\"S\\"
                },
                {
                    \\"AttributeName\\": \\"sortKey\\",
                    \\"AttributeType\\": \\"N\\"
                },
                {
                    \\"AttributeName\\": \\"lsiSortKey\\",
                    \\"AttributeType\\": \\"N\\"
                }
            ],
            \\"LocalSecondaryIndexes\\": [
                {
                    \\"IndexName\\": \\"LSI-PartitionAndSortKey\\",
                    \\"KeySchema\\": [
                        {
                            \\"AttributeName\\": \\"hashKey\\",
                            \\"KeyType\\": \\"HASH\\"
                        },
                        {
                            \\"AttributeName\\": \\"lsiSortKey\\",
                            \\"KeyType\\": \\"RANGE\\"
                        }
                    ],
                    \\"Projection\\": {
                        \\"ProjectionType\\": \\"ALL\\"
                    }
                }
            ],
            \\"ProvisionedThroughput\\": {
                \\"ReadCapacityUnits\\": 5,
                \\"WriteCapacityUnits\\": 5
            }
        },
        \\"name\\": \\"TableWithLocalSecondaryIndex4DA3D08F\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::DynamoDB::Table\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {},
        \\"name\\": \\"User00B015A1\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::IAM::User\\"
    },
    {
        \\"incoming\\": {},
        \\"outgoing\\": {},
        \\"properties\\": {
            \\"PolicyDocument\\": {
                \\"Statement\\": [
                    {
                        \\"Action\\": [
                            \\"dynamodb:BatchGetItem\\",
                            \\"dynamodb:GetRecords\\",
                            \\"dynamodb:GetShardIterator\\",
                            \\"dynamodb:Query\\",
                            \\"dynamodb:GetItem\\",
                            \\"dynamodb:Scan\\",
                            \\"dynamodb:ConditionCheckItem\\"
                        ],
                        \\"Effect\\": \\"Allow\\",
                        \\"Resource\\": [
                            {
                                \\"Fn::GetAtt\\": [
                                    \\"TableCD117FA1\\",
                                    \\"Arn\\"
                                ]
                            },
                            {
                                \\"Ref\\": \\"AWS::NoValue\\"
                            }
                        ]
                    },
                    {
                        \\"Action\\": [
                            \\"dynamodb:BatchGetItem\\",
                            \\"dynamodb:GetRecords\\",
                            \\"dynamodb:GetShardIterator\\",
                            \\"dynamodb:Query\\",
                            \\"dynamodb:GetItem\\",
                            \\"dynamodb:Scan\\",
                            \\"dynamodb:ConditionCheckItem\\"
                        ],
                        \\"Effect\\": \\"Allow\\",
                        \\"Resource\\": [
                            {
                                \\"Fn::GetAtt\\": [
                                    \\"TableWithGlobalAndLocalSecondaryIndexBC540710\\",
                                    \\"Arn\\"
                                ]
                            },
                            {
                                \\"Fn::Join\\": [
                                    \\"\\",
                                    [
                                        {
                                            \\"Fn::GetAtt\\": [
                                                \\"TableWithGlobalAndLocalSecondaryIndexBC540710\\",
                                                \\"Arn\\"
                                            ]
                                        },
                                        \\"/index/*\\"
                                    ]
                                ]
                            }
                        ]
                    }
                ],
                \\"Version\\": \\"2012-10-17\\"
            },
            \\"PolicyName\\": \\"UserDefaultPolicy1F97781E\\",
            \\"Users\\": [
                {
                    \\"Ref\\": \\"User00B015A1\\"
                }
            ]
        },
        \\"name\\": \\"UserDefaultPolicy1F97781E\\",
        \\"type\\": \\"resource\\",
        \\"subtype\\": \\"AWS::IAM::Policy\\"
    }
]"
`;
